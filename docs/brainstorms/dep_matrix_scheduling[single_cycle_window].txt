[ UNARY COUNTER IDEA ]

<PREFACE>

This brainstorm aims to tackle the issues with multiple instructions needing to writeback
at the same time, along with how to schedule/block instructions to "optimally" fill the pipeline
to stop writeback "blockages".

Along with each "unary count diagram" a pipeline diagram will be shown.

PLEASE NOTE:
    - The pipeline will start from a stalled state to force the absolute worst-case scenario.
      Thus, time prior to 0 in the unary count diagram will be represented by t-n.
    - The first three sections use an exaggurated starting scenario in which instructions have
      piled up in the dependancy_matrix due to a large stall.
    - Instructions have a cycle cost in [x] brackets
    - All instructions are independant
        > larger stress tests with real assembly will be done soon, in this document or when
          other logic in the dep. matrix is solidified.

</PREFACE>



+-----------------------------------------------------+
| Fig. 1 | Check Duplication  -- Post Execution Stall |
+-----------------------------------------------------+

    Strategy: Only stall duplicate counts

    Result: Force instructions to stall just before writeback


              | Time ( Cycles )
              +-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+
              | 0               | 1               | 2               | 3               | 4               | 5               | 6               | 7               | 8               |
Instructions/ +-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
[cost]        | Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl|
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
a [4]         |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
b [1]         |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
c [1]         |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
d [2]         |   0 0 1 0   |   |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
e [1]         |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
f [4]         |   1 0 0 0   | 1 |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
g [3]         |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
h [1]         |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+



KEY: [F]etch, [D]ecode, [E]xecute, [W]riteback, Bubble = []

              | Time ( Cycles )
Instructions/ +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
[cost]        |-9 |-8 |-7 |-6 |-5 |-4 |-3 |-2 |-1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
a [4]         | F | D |   |   |   |   |   |   |   | E | E | E | E | W |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
b [1]         |   | F | D |   |   |   |   |   |   | E | W |   |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
c [1]         |   |   | F | D |   |   |   |   |   |   | E | W |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
d [2]         |   |   |   | F | D |   |   |   |   | E | E |   | W |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
e [1]         |   |   |   |   | F | D |   |   |   |   |   |   |   | E | W |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
f [4]         |   |   |   |   |   | F | D |   |   |   | E | E | E | E |   | W |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
g [3]         |   |   |   |   |   |   | F | D |   | E |   |   |   |   |   |   | W |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
h [1]         |   |   |   |   |   |   |   | F | D | E |   |   |   |   |   |   |   | W |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+



CONCLUSION

Stalling instructions within the pipeline means there must be a method of buffering outputs
of the execution units untill dta can be written back.
This is not optimal for t16's micro-architecture as I do not want to implement Tomasulo's
algorithm; an extremely powerful method of buffing and optimising the utilistion of execution
units.




+--------+--------------------------------------------------------------+
| Fig. 2 | Single Cycle Window(SCW) + Duplication -- Pre Exection Stall |
+--------+--------------------------------------------------------------+

    Strategy: Within two most recent count=1, only check duplicates and stall
              all instructions after second most recent count=1

    Result: Force instructions to stall before execution


              | Time ( Cycles )
              +-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+
              | 0               | 1               | 2               | 3               | 4               | 5               | 6               | 7               | 8               |
Instructions/ +-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
[cost]        | Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl|
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
a [4]         |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
b [1]         |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
c [1]         |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
d [2]         |   0 0 1 0   | 1 |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
e [1]         |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
f [4]         |   1 0 0 0   | 1 |   1 0 0 0   | 1 |   1 0 0 0   | 1 |   1 0 0 0   | 1 |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
g [3]         |   0 1 0 0   | 1 |   0 1 0 0   | 1 |   0 1 0 0   | 1 |   0 1 0 0   | 1 |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
h [1]         |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+



KEY: [F]etch, [D]ecode, [E]xecute, [W]riteback, Bubble = []

              | Time ( Cycles )
Instructions/ +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
[cost]        |-9 |-8 |-7 |-6 |-5 |-4 |-3 |-2 |-1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
a [4]         | F | D |   |   |   |   |   |   |   | E | E | E | E | W |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
b [1]         |   | F | D |   |   |   |   |   |   | E | W |   |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
c [1]         |   |   | F | D |   |   |   |   |   |   | E | W |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
d [2]         |   |   |   | F | D |   |   |   |   |   | E | E | W |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
e [1]         |   |   |   |   | F | D |   |   |   |   |   |   |   | E | W |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
f [4]         |   |   |   |   |   | F | D |   |   |   |   |   |   | E | E | E | E | W |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
g [3]         |   |   |   |   |   |   | F | D |   |   |   |   |   | E | E | E | W |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
h [1]         |   |   |   |   |   |   |   | F | D |   |   |   |   |   | E | W |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+



CONCLUSION

Works extremely well to ensure instructions stall at decode. The pipeline diagram shows how
instructions writeback much more predictably and without large time-spans between execute
and writeback.
More stress testing is required as this example "program" isn't a difficut scenario.





+--------+-------------------------------------------------------------+
| Fig. 3 | Single Cycle Window + Duplication -- STRESS TEST 1: Backlog |
+--------+-------------------------------------------------------------+



              | Time ( Cycles )
              +-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+
              | 0               | 1               | 2               | 3               | 4               | 5               | 6               | 7               | 8               |
Instructions/ +-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
[cost]        | Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl|
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
a [4]         |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
b [4]         |   1 0 0 0   | 1 |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
c [3]         |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
d [3]         |   0 1 0 0   | 1 |   0 1 0 0   | 1 |   0 1 0 0   | 1 |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
e [2]         |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
f [2]         |   0 0 1 0   | 1 |   0 0 1 0   | 1 |   0 0 1 0   | 1 |   0 0 1 0   | 1 |   0 0 1 0   | 1 |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
g [1]         |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
h [1]         |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+



KEY: [F]etch, [D]ecode, [E]xecute, [W]riteback, Bubble = []

              | Time ( Cycles )
Instructions/ +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
[cost]        |-9 |-8 |-7 |-6 |-5 |-4 |-3 |-2 |-1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
a [4]         | F | D |   |   |   |   |   |   |   | E | E | E | E | W |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
b [4]         |   | F | D |   |   |   |   |   |   |   | E | E | E | E | W |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
c [3]         |   |   | F | D |   |   |   |   |   | E | E | E | W |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
d [3]         |   |   |   | F | D |   |   |   |   |   |   |   | E | E | E | W |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
e [2]         |   |   |   |   | F | D |   |   |   | E | E | W |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
f [2]         |   |   |   |   |   | F | D |   |   |   |   |   |   |   | E | E | W |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
g [1]         |   |   |   |   |   |   | F | D |   | E | W |   |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
h [1]         |   |   |   |   |   |   |   | F | D |   |   |   |   |   |   |   | E | W |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+



CONCLUSION

Single Cycle Window + Duplication, which I now dub "SCW" scheduling works perfectly so far.
The hardware to implement this would be relatively simple, however, I still don't have a full
picture of how the other parts of the dependancy_matrix will function.

I do wonder how often, and how deep, the dependancy matrix can accumulate enough "look-ahead"
to allow "deep" look-ahead. Thus, the next stress test will look at a scenario of a "fresh"
pipeline. In comparison, this test looked at how SCW would tackle a backlog of instructions
after a long stall.





+--------+---------------------------------------------------------------+
| Fig. 4 | Single Cycle Window + Duplication -- STRESS TEST 2: Realistic |
+--------+---------------------------------------------------------------+



              | Time ( Cycles )
              +-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-----------------+-------------+---+-------------+---+
              | 0               | 1               | 2               | 3               | 4               | 5               | 6               | 7               | 8               | 9               | 10              | 11              |
Instructions/ +-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
[cost]        | Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl| Unary Count |stl|
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
a [4]         |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
b [4]         |   - - - -   |   |   1 0 0 0   |   |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
c [3]         |   - - - -   |   |   - - - -   |   |   0 1 0 0   | 1 |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
d [3]         |   - - - -   |   |   - - - -   |   |   - - - -   |   |   0 1 0 0   | 1 |   0 1 0 0   |   |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
e [2]         |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   0 0 1 0   | 1 |   0 0 1 0   | 1 |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
f [2]         |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   0 0 1 0   | 1 |   0 0 1 0   | 1 |   0 0 1 0   |   |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
g [1]         |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |   - - - -   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+
h [1]         |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   - - - -   |   |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   | 1 |   0 0 0 1   |   |   0 0 0 0   |   |
--------------+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+-------------+---+



KEY: [F]etch, [D]ecode, [E]xecute, [W]riteback, Bubble = []

              | Time ( Cycles )
Instructions/ +---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
[cost]        |-2 |-1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |10 |11 |12 |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
a [4]         | F | D | E | E | E | E | W |   |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
b [4]         |   | F | D | E | E | E | E | W |   |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
c [3]         |   |   | F | D |   | E | E | E | W |   |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
d [3]         |   |   |   | F | D |   | E | E | E | W |   |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
e [2]         |   |   |   |   | F | D |   |   | E | E | W |   |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
f [2]         |   |   |   |   |   | F | D |   |   | E | E | W |   |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
g [1]         |   |   |   |   |   |   | F | D |   |   |   | E | W |   |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
h [1]         |   |   |   |   |   |   |   | F | D |   |   |   | E | W |   |
--------------+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+



CONCLUSION

With a more standard starting scenario, single cycle window(SCW) works perfectly to only
allow instructions to execute if a writeback "slot" is available.

In terms of performance, I feel like s16 should stop here in terms of decoding/scheduling
complexity. Focus should move to testing SCW on asychronous instructions(load,store,
monitor), branching, instruction prefetching, and how the dependancy matrix works as a whole.

For the point of future development for t16, SCW must be adapted to allow superscalar
execution and other optimisations to increase pipeline utilisations.

